Características importantes de TypeScript:
Tipado estático: TypeScript es un lenguaje de programación tipado estáticamente, 
lo que significa que puedes declarar el tipo de las variables, parámetros de función y retornos de función. 
Esto ayuda a detectar errores en tiempo de compilación y a mejorar la robustez del código.

Inferencia de tipos: Aunque TypeScript permite especificar tipos de manera explícita, 
también puede inferir automáticamente los tipos basándose en el contexto. Esto reduce la necesidad de escribir
 tipos redundantes y hace que el código sea más conciso.

Características de los lenguajes modernos: TypeScript incorpora muchas características de los lenguajes modernos 
como clases, interfaces, módulos, funciones flecha, y más. Estas características facilitan la escritura de código 
más estructurado y orientado a objetos.

Mejoras en el desarrollo a gran escala: TypeScript es especialmente útil en proyectos grandes y complejos, ya que 
ofrece características como la verificación estática de tipos y la capacidad de refactorización que ayudan a mantener
 y escalar el código con mayor facilidad.

Compatibilidad con JavaScript: TypeScript es un superset de JavaScript, lo que significa que cualquier código 
JavaScript válido es también código TypeScript válido. Esto facilita la adopción gradual de TypeScript en proyectos
existentes.

Herramientas de desarrollo: TypeScript es compatible con una variedad de herramientas de desarrollo, como 
Visual Studio Code, que ofrecen características avanzadas como autocompletado de código, navegación rápida, 
y detección de errores en tiempo real.

Diferencias con JavaScript:
Tipado estático: Mientras que JavaScript es dinámicamente tipado, lo que significa que los tipos de las variables 
se determinan en tiempo de ejecución, TypeScript es tipado estáticamente, lo que permite detectar errores de tipo 
en tiempo de compilación.

Sintaxis de tipado: TypeScript introduce una sintaxis adicional para declarar tipos, como : tipo para variables
 y parámetros de función, y : tipo para retornos de función.

Ventajas en la detección de errores: Debido a su naturaleza tipada estáticamente, TypeScript puede detectar y 
corregir errores de tipo antes de la ejecución del programa, lo que puede ayudar a reducir los errores en tiempo
 de ejecución.

Necesidad de compilación: A diferencia de JavaScript, que se ejecuta directamente en el navegador o en el 
entorno de ejecución, el código TypeScript debe compilarse a JavaScript antes de ser ejecutado. Esto implica un paso
 adicional en el flujo de desarrollo.